{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fbc62\\\\OneDrive\\\\Desktop\\\\covid19\\\\src\\\\App.js\";\nimport React, { useCallback, useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport light from './styles/themes/light';\nimport dark from './styles/themes/dark';\nimport Routes from './routes';\nimport GlobalStyles from './styles/global';\nimport Context from './util/AppContext';\nimport usePersistedState from './util/usePersistedState';\n\nfunction App() {\n  const [countriesData, setCountriesData] = useState({});\n  const [dailyData, setDailyData] = useState({});\n  const [theme, setTheme] = usePersistedState('theme', light);\n  const handleCountriesChange = useCallback(value => setCountriesData(value), [setCountriesData]);\n  const handleDailyChange = useCallback(value => setDailyData(value), [setDailyData]);\n  const toggleTheme = useCallback(() => setTheme(theme.title === 'light' ? dark : light), [theme, setTheme]);\n  return React.createElement(Context.Provider, {\n    value: {\n      countriesData,\n      setCountriesData: handleCountriesChange,\n      toggleTheme,\n      theme,\n      dailyData,\n      setDailyData: handleDailyChange\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(GlobalStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/fbc62/OneDrive/Desktop/covid19/src/App.js"],"names":["React","useCallback","useState","ThemeProvider","light","dark","Routes","GlobalStyles","Context","usePersistedState","App","countriesData","setCountriesData","dailyData","setDailyData","theme","setTheme","handleCountriesChange","value","handleDailyChange","toggleTheme","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBP,iBAAiB,CAAC,OAAD,EAAUL,KAAV,CAA3C;AAEA,QAAMa,qBAAqB,GAAGhB,WAAW,CAACiB,KAAK,IAAIN,gBAAgB,CAACM,KAAD,CAA1B,EAAmC,CAC1EN,gBAD0E,CAAnC,CAAzC;AAIA,QAAMO,iBAAiB,GAAGlB,WAAW,CAACiB,KAAK,IAAIJ,YAAY,CAACI,KAAD,CAAtB,EAA+B,CAClEJ,YADkE,CAA/B,CAArC;AAIA,QAAMM,WAAW,GAAGnB,WAAW,CAC7B,MAAMe,QAAQ,CAACD,KAAK,CAACM,KAAN,KAAgB,OAAhB,GAA0BhB,IAA1B,GAAiCD,KAAlC,CADe,EAE7B,CAACW,KAAD,EAAQC,QAAR,CAF6B,CAA/B;AAKA,SACE,oBAAC,OAAD,CAAS,QAAT;AACE,IAAA,KAAK,EAAE;AACLL,MAAAA,aADK;AAELC,MAAAA,gBAAgB,EAAEK,qBAFb;AAGLG,MAAAA,WAHK;AAILL,MAAAA,KAJK;AAKLF,MAAAA,SALK;AAMLC,MAAAA,YAAY,EAAEK;AANT,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEJ,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,CADF;AAiBD;;AAED,eAAeL,GAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport light from './styles/themes/light';\r\nimport dark from './styles/themes/dark';\r\nimport Routes from './routes';\r\nimport GlobalStyles from './styles/global';\r\nimport Context from './util/AppContext';\r\nimport usePersistedState from './util/usePersistedState';\r\n\r\nfunction App() {\r\n  const [countriesData, setCountriesData] = useState({});\r\n  const [dailyData, setDailyData] = useState({});\r\n  const [theme, setTheme] = usePersistedState('theme', light);\r\n\r\n  const handleCountriesChange = useCallback(value => setCountriesData(value), [\r\n    setCountriesData,\r\n  ]);\r\n\r\n  const handleDailyChange = useCallback(value => setDailyData(value), [\r\n    setDailyData,\r\n  ]);\r\n\r\n  const toggleTheme = useCallback(\r\n    () => setTheme(theme.title === 'light' ? dark : light),\r\n    [theme, setTheme]\r\n  );\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        countriesData,\r\n        setCountriesData: handleCountriesChange,\r\n        toggleTheme,\r\n        theme,\r\n        dailyData,\r\n        setDailyData: handleDailyChange,\r\n      }}\r\n    >\r\n      <ThemeProvider theme={theme}>\r\n        <Routes />\r\n        <GlobalStyles />\r\n      </ThemeProvider>\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}